name: Docker Build and Push

# Controls when the workflow will run
on:
  push:
    branches: ["main"] # Trigger on pushes to the main branch
  workflow_dispatch: {} # Allows manual triggering from the Actions tab

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.repository }} # Gets owner/repo name (e.g., my-org/my-repo)
  # Note: GHCR requires lowercase image names. The action handles this,
  # but if you construct names manually, ensure they are lowercase.

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the GITHUB_TOKEN for the actions in this job.
    # Necessary for pushing to GitHub Packages (GHCR).
    permissions:
      contents: read # Needed to check out the repository code.
      packages: write # Needed to push packages (docker images) to GHCR.
      # id-token: write # Uncomment if using Docker's OIDC login (advanced).

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Use the latest version

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # Your GitHub username or organization name
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically generated

      - name: Extract metadata (tags, labels) for Docker
        id: meta # Assign an ID to refer to the outputs later
        uses: docker/metadata-action@v5
        with:
          # Create image name based on registry and repository name (auto-lowercased)
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          # Generates tags based on context:
          # - on main branch push: latest
          # - on git tag push: the git tag
          # - on commit push: the commit sha
          # See action docs for more options: https://github.com/docker/metadata-action

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the root of the repository
          # file: ./path/to/your/Dockerfile # Uncomment if Dockerfile isn't in the root
          push: true # Actually push the image
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by metadata-action
          labels: ${{ steps.meta.outputs.labels }} # Add labels generated by metadata-action
          cache-from: type=gha # Enable GitHub Actions cache for faster builds
          cache-to: type=gha,mode=max
